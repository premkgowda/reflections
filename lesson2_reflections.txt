What happens when you initialize a repository?
 Why do you need to do it?
when you create a repository it's ot created in the git. Inorder to create the repository in git we need to initialize it.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area let's you add the related changes to one committ. This way all related changes can be committed once instead of committing it individually

How can you use the staging area to make sure you have one commit per logical change?
By adding the related changes to staging area and commiting it once added will ensure that there is one commit per logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
experimental changes that we are not sure we want to commit to the main branch yet Or changes that may need to be rolled back if didn't work.

How do the diagrams help you visualize the branch structure?
Diagrams enable to visualize what branches and commits are related and how the change in each branch will impact the other.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Changes in both the files are merged. IN order to track the changes and unrelated branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Git's automatic merging reduces lot of the manual work, however there may be some guess work involved at times.
Manually is time consuming, however , we can decide what's conflicting.